# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2022-09-09 09:36:58
"""
import arcpy
from arcpy.ia import *

def underwater_cable():  # underwater_cable

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Check out any necessary licenses.
    arcpy.CheckOutExtension("3D")
    arcpy.CheckOutExtension("spatial")
    arcpy.CheckOutExtension("ImageAnalyst")

    # Model Environment settings
    with arcpy.EnvManager(scratchWorkspace=r"\\sgu.se\SGU\prod\proj\marin\swoc\work\wiosym\data\reg\act\inf_cables\v01\proc\inf_cable\Default.gdb", workspace=r"\\sgu.se\SGU\prod\proj\marin\swoc\work\wiosym\data\reg\act\inf_cables\v01\proc\inf_cable\Default.gdb"):
        grid_1km_na_v01_1_tif = arcpy.Raster("grid_1km_na_v01.1.tif")
        cable_geo = "cable-geo"
        Cables = "Cables"
        undersea_telecommunication_cables = "undersea-telecommunication-cables"
        wiosym_grid_bounding_box_v01 = "wiosym_grid_bounding_box_v01"
        grid_1km_v01_1_tif = arcpy.Raster("grid_1km_v01.1.tif")
        proc = "\\\\sgu.se\\SGU\\prod\\proj\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\inf_cables\\v01\\proc"

        # Process: Merge (Merge) (management)
        Cables_Merg_shp = "\\\\sgu.se\\SGU\\prod\\proj\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\inf_cables\\v01\\proc\\Cables_Merg.shp"
        arcpy.management.Merge(inputs=[cable_geo, Cables, undersea_telecommunication_cables], output=Cables_Merg_shp, field_mappings="id \"id\" true true false 86 Text 0 0,First,#,cable-geo,id,0,86,Cables,Id,-1,-1,undersea-telecommunication-cables,Id,-1,-1;name \"name\" true true false 91 Text 0 0,First,#,cable-geo,name,0,91,Cables,Name,0,50,undersea-telecommunication-cables,Name,0,44;color \"color\" true true false 7 Text 0 0,First,#,cable-geo,color,0,7;feature_id \"feature_id\" true true false 88 Text 0 0,First,#,cable-geo,feature_id,0,88;coordinate \"coordinate\" true true false 18 Text 0 0,First,#,cable-geo,coordinate,0,18;Capacity_G \"Capacity_G\" true true false 19 Double 0 0,First,#,Cables,Capacity_G,-1,-1,undersea-telecommunication-cables,Capacity_G,-1,-1;URL1 \"URL1\" true true false 200 Text 0 0,First,#,Cables,URL1,0,200,undersea-telecommunication-cables,URL1,0,200;URL2 \"URL2\" true true false 200 Text 0 0,First,#,Cables,URL2,0,200,undersea-telecommunication-cables,URL2,0,122;Distance_K \"Distance_K\" true true false 19 Double 0 0,First,#,Cables,Distance_K,-1,-1,undersea-telecommunication-cables,Distance_K,-1,-1;OverLand \"OverLand\" true true false 4 Short 0 4,First,#,Cables,OverLand,-1,-1,undersea-telecommunication-cables,OverLand,-1,-1;NotLive \"NotLive\" true true false 4 Short 0 4,First,#,Cables,NotLive,-1,-1,undersea-telecommunication-cables,NotLive,-1,-1;InService \"InService\" true true false 4 Short 0 4,First,#,Cables,InService,-1,-1,undersea-telecommunication-cables,InService,-1,-1;precise \"precise\" true true false 4 Short 0 4,First,#,Cables,precise,-1,-1,undersea-telecommunication-cables,precise,-1,-1;Notes \"Notes\" true true false 254 Text 0 0,First,#,Cables,Notes,0,254,undersea-telecommunication-cables,Notes,0,115", add_source="NO_SOURCE_INFO")

        # Process: Clip (Clip) (analysis)
        Cables_Merg_clip_WIO_shp = "\\\\sgu.se\\SGU\\prod\\proj\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\inf_cables\\v01\\proc\\Cables_Merg_clip_WIO.shp"
        arcpy.analysis.Clip(in_features=Cables_Merg_shp, clip_features=wiosym_grid_bounding_box_v01, out_feature_class=Cables_Merg_clip_WIO_shp, cluster_tolerance="")

        # Process: Feature to Raster (Feature to Raster) (conversion)
        cables_merg_raster_tif = "\\\\sgu.se\\SGU\\prod\\proj\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\inf_cables\\v01\\proc\\cables_merg_raster.tif"
        with arcpy.EnvManager(scratchWorkspace=r"M:\proj\marin\swoc\work\wiosym\data\reg\act\inf_cables\v01\proc\inf_cable\Default.gdb", workspace=r"M:\proj\marin\swoc\work\wiosym\data\reg\act\inf_cables\v01\proc\inf_cable\Default.gdb"):
            arcpy.conversion.FeatureToRaster(in_features=Cables_Merg_clip_WIO_shp, field="id", out_raster=cables_merg_raster_tif, cell_size="0.01")
            cables_merg_raster_tif = arcpy.Raster(cables_merg_raster_tif)

        # Process: Project Raster (2) (Project Raster) (management)
        cables_merg_raster_ProjectRa = "\\\\sgu.se\\SGU\\prod\\proj\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\inf_cables\\v01\\proc\\inf_cable\\Default.gdb\\cables_merg_raster_ProjectRa"
        with arcpy.EnvManager(cellSize=r"M:\proj\marin\swoc\work\wiosym\data\reg\grid\grid\v01\grid_1km_v01.1.tif", pyramid="PYRAMIDS -1 NEAREST LZ77 75 NO_SKIP NO_SIPS", scratchWorkspace=r"M:\proj\marin\swoc\work\wiosym\data\reg\act\inf_cables\v01\proc\inf_cable\Default.gdb", 
                              snapRaster="grid_1km_v01.1.tif", workspace=r"M:\proj\marin\swoc\work\wiosym\data\reg\act\inf_cables\v01\proc\inf_cable\Default.gdb"):
            arcpy.management.ProjectRaster(in_raster=cables_merg_raster_tif, out_raster=cables_merg_raster_ProjectRa, out_coor_system="PROJCS[\"WGS_1984_Cylindrical_Equal_Area\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Cylindrical_Equal_Area\"],PARAMETER[\"false_easting\",0.0],PARAMETER[\"false_northing\",0.0],PARAMETER[\"central_meridian\",12.0],PARAMETER[\"standard_parallel_1\",-12.0],UNIT[\"Meter\",1.0]]", resampling_type="NEAREST", cell_size="1000 1000", geographic_transform=[], Registration_Point="", in_coor_system="GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]]", vertical="NO_VERTICAL")
            cables_merg_raster_ProjectRa = arcpy.Raster(cables_merg_raster_ProjectRa)

        # Process: Reclassify (Reclassify) (sa)
        cables_merg_raster_reclassify_tif = "\\\\sgu.se\\SGU\\prod\\proj\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\inf_cables\\v01\\proc\\cables_merg_raster_reclassify.tif"
        Reclassify = cables_merg_raster_reclassify_tif
        with arcpy.EnvManager(scratchWorkspace=r"M:\proj\marin\swoc\work\wiosym\data\reg\act\inf_cables\v01\proc\inf_cable\Default.gdb", workspace=r"M:\proj\marin\swoc\work\wiosym\data\reg\act\inf_cables\v01\proc\inf_cable\Default.gdb"):
            cables_merg_raster_reclassify_tif = arcpy.sa.Reclassify(in_raster=cables_merg_raster_ProjectRa, reclass_field="Value", remap="1 45 1", missing_values="DATA")
            cables_merg_raster_reclassify_tif.save(Reclassify)


        # Process: Focal Statistics (Focal Statistics) (ia)
        cables_reclass_focal_tif = "\\\\sgu.se\\SGU\\prod\\proj\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\inf_cables\\v01\\proc\\cables_reclass_focal.tif"
        Focal_Statistics = cables_reclass_focal_tif
        with arcpy.EnvManager(scratchWorkspace=r"M:\proj\marin\swoc\work\wiosym\data\reg\act\inf_cables\v01\proc\inf_cable\Default.gdb", workspace=r"M:\proj\marin\swoc\work\wiosym\data\reg\act\inf_cables\v01\proc\inf_cable\Default.gdb"):
            cables_reclass_focal_tif = arcpy.ia.FocalStatistics(in_raster=cables_merg_raster_reclassify_tif, neighborhood="Wedge 10 0 360 CELL", statistics_type="SUM", ignore_nodata="DATA", percentile_value=90)
            cables_reclass_focal_tif.save(Focal_Statistics)


        # Process: Mosaic To New Raster (Mosaic To New Raster) (management)
        with arcpy.EnvManager(pyramid="PYRAMIDS -1 NEAREST LZ77 75 NO_SKIP NO_SIPS"):
            cable_combine_grid_tif = arcpy.management.MosaicToNewRaster(input_rasters=[cables_reclass_focal_tif, grid_1km_v01_1_tif], output_location=proc, raster_dataset_name_with_extension="cable_combine_grid.tif", coordinate_system_for_the_raster="PROJCS[\"WGS_1984_Cylindrical_Equal_Area\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Cylindrical_Equal_Area\"],PARAMETER[\"false_easting\",0.0],PARAMETER[\"false_northing\",0.0],PARAMETER[\"central_meridian\",12.0],PARAMETER[\"standard_parallel_1\",-12.0],UNIT[\"Meter\",1.0]]", pixel_type="64_BIT", cellsize=None, number_of_bands=1, mosaic_method="SUM", mosaic_colormap_mode="FIRST")[0]
            cable_combine_grid_tif = arcpy.Raster(cable_combine_grid_tif)

        # Process: Extract by Mask (Extract by Mask) (sa)
        inf_cable_norm_water_tif = "\\\\sgu.se\\SGU\\prod\\proj\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\inf_cables\\v01\\proc\\inf_cable_norm_water.tif"
        Extract_by_Mask = inf_cable_norm_water_tif
        with arcpy.EnvManager(cellSize=r"M:\proj\marin\swoc\work\wiosym\data\reg\grid\grid\v01\grid_1km_v01.1.tif", mask="grid_1km_v01.1.tif", outputCoordinateSystem="PROJCS["WGS_1984_Cylindrical_Equal_Area",GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Cylindrical_Equal_Area"],PARAMETER["false_easting",0.0],PARAMETER["false_northing",0.0],PARAMETER["central_meridian",12.0],PARAMETER["standard_parallel_1",-12.0],UNIT["Meter",1.0]]", 
                              snapRaster="grid_1km_v01.1.tif"):
            inf_cable_norm_water_tif = arcpy.sa.ExtractByMask(in_raster=cable_combine_grid_tif, in_mask_data=grid_1km_v01_1_tif)
            inf_cable_norm_water_tif.save(Extract_by_Mask)


        # Process: Raster Calculator (Raster Calculator) (ia)
        inf_submarine_cable_1km_norm_v01_1_tif = "\\\\sgu.se\\SGU\\prod\\proj\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\inf_cables\\v01\\inf_submarine_cable_1km_norm_v01.1.tif"
        Raster_Calculator = inf_submarine_cable_1km_norm_v01_1_tif
        with arcpy.EnvManager(cellSize=r"M:\proj\marin\swoc\work\wiosym\data\reg\grid\grid\v01\grid_1km_v01.1.tif", mask="grid_1km_v01.1.tif", outputCoordinateSystem="PROJCS["WGS_1984_Cylindrical_Equal_Area",GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Cylindrical_Equal_Area"],PARAMETER["false_easting",0.0],PARAMETER["false_northing",0.0],PARAMETER["central_meridian",12.0],PARAMETER["standard_parallel_1",-12.0],UNIT["Meter",1.0]]", 
                              snapRaster="grid_1km_v01.1.tif"):
            inf_submarine_cable_1km_norm_v01_1_tif =  ((inf_cable_norm_water_tif- inf_cable_norm_water_tif.minimum)/(inf_cable_norm_water_tif.maximum- inf_cable_norm_water_tif.minimum))*1
            inf_submarine_cable_1km_norm_v01_1_tif.save(Raster_Calculator)


if __name__ == '__main__':
    underwater_cable()
