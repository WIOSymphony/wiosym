# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2022-05-25 16:36:00
"""
import arcpy
from arcpy.ia import *
from arcpy.sa import *

def seabed_mining():  # seabed_mining

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Check out any necessary licenses.
    arcpy.CheckOutExtension("3D")
    arcpy.CheckOutExtension("spatial")
    arcpy.CheckOutExtension("ImageAnalyst")

    grid_1km_v01_1_tif_2_ = arcpy.Raster("grid_1km_v01.1.tif")
    _01_pmn_exploration_areas = "01_pmn_exploration_areas"
    _02_pms_exploration_areas = "02_pms_exploration_areas"
    _04_pmn_reserved_areas = "04_pmn_reserved_areas"
    wiosym_grid_bounding_box_v01 = "wiosym_grid_bounding_box_v01"
    grid_1km_v01_1_tif = arcpy.Raster("grid_1km_v01.1.tif")
    grid_1km_v01_1_tif_3_ = arcpy.Raster("grid_1km_v01.1.tif")
    proc_2_ = "M:\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\Seabed_mining\\v01\\proc"

    # Process: Merge (Merge) (management)
    seabed_mining_merg_shp = "M:\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\Seabed_mining\\v01\\proc\\seabed_mining_merg.shp"
    arcpy.management.Merge(inputs=[_01_pmn_exploration_areas, _02_pms_exploration_areas, _04_pmn_reserved_areas], output=seabed_mining_merg_shp, field_mappings="Contractor \"Contractor\" true true false 50 Text 0 0,First,#,01_pmn_exploration_areas,Contractor,0,50,02_pms_exploration_areas,Contractor,0,50,04_pmn_reserved_areas,Contractor,0,50;Type \"Type\" true true false 50 Text 0 0,First,#,01_pmn_exploration_areas,Type,0,50,02_pms_exploration_areas,Type,0,50,04_pmn_reserved_areas,Type,0,50;value \"value\" true true false 5 Long 0 5,First,#,01_pmn_exploration_areas,value,-1,-1,02_pms_exploration_areas,value,-1,-1,04_pmn_reserved_areas,value,-1,-1", add_source="NO_SOURCE_INFO")

    # Process: Clip (Clip) (analysis)
    seabed_mining_merg_clip_shp = "M:\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\Seabed_mining\\v01\\proc\\seabed_mining_merg_clip.shp"
    arcpy.analysis.Clip(in_features=seabed_mining_merg_shp, clip_features=wiosym_grid_bounding_box_v01, out_feature_class=seabed_mining_merg_clip_shp, cluster_tolerance="")

    # Process: Feature to Raster (Feature to Raster) (conversion)
    seabed_mining_area_raster_tif = "M:\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\Seabed_mining\\v01\\proc\\seabed_mining_area_raster.tif"
    arcpy.conversion.FeatureToRaster(in_features=seabed_mining_merg_clip_shp, field="value", out_raster=seabed_mining_area_raster_tif, cell_size="0,28759879612")
    seabed_mining_area_raster_tif = arcpy.Raster(seabed_mining_area_raster_tif)

    # Process: Reclassify (2) (Reclassify) (sa)
    seabed_mining_area_reclass_tif = "M:\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\Seabed_mining\\v01\\proc\\seabed_mining_area_reclass.tif"
    Reclassify_2_ = seabed_mining_area_reclass_tif
    seabed_mining_area_reclass_tif = arcpy.sa.Reclassify(in_raster=seabed_mining_area_raster_tif, reclass_field="Value", remap="1 1;1 2 1;2 3 1", missing_values="DATA")
    seabed_mining_area_reclass_tif.save(Reclassify_2_)


    # Process: Extract by Mask (2) (Extract by Mask) (sa)
    seabed_mining_area_raster_mask_tif = "M:\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\Seabed_mining\\v01\\proc\\seabed_mining_area_raster_mask.tif"
    Extract_by_Mask_2_ = seabed_mining_area_raster_mask_tif
    with arcpy.EnvManager(cellSize=r"M:\marin\swoc\work\wiosym\data\reg\grid\grid\v01\grid_1km_v01.1.tif", cellSizeProjectionMethod="PRESERVE_RESOLUTION", extent="MAXOF", 
                          outputCoordinateSystem="PROJCS["WGS_1984_Cylindrical_Equal_Area",GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Cylindrical_Equal_Area"],PARAMETER["false_easting",0.0],PARAMETER["false_northing",0.0],PARAMETER["central_meridian",12.0],PARAMETER["standard_parallel_1",-12.0],UNIT["Meter",1.0]]"):
        seabed_mining_area_raster_mask_tif = arcpy.sa.ExtractByMask(in_raster=seabed_mining_area_reclass_tif, in_mask_data=grid_1km_v01_1_tif)
        seabed_mining_area_raster_mask_tif.save(Extract_by_Mask_2_)


    # Process: Raster Calculator (Raster Calculator) (ia)
    seabed_mining_grid_tif = "M:\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\Seabed_mining\\v01\\proc\\seabed_mining_grid.tif"
    Raster_Calculator = seabed_mining_grid_tif
    seabed_mining_grid_tif =  grid_1km_v01_1_tif_2_ + seabed_mining_area_raster_mask_tif
    seabed_mining_grid_tif.save(Raster_Calculator)


    # Process: Mosaic To New Raster (2) (Mosaic To New Raster) (management)
    with arcpy.EnvManager(nodata="MAP_UP"):
        seabed_mining_grid_mosaic_tif = arcpy.management.MosaicToNewRaster(input_rasters=[seabed_mining_grid_tif, grid_1km_v01_1_tif_3_], output_location=proc_2_, raster_dataset_name_with_extension="seabed_mining_grid_mosaic.tif", coordinate_system_for_the_raster="PROJCS[\"WGS_1984_Cylindrical_Equal_Area\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Cylindrical_Equal_Area\"],PARAMETER[\"false_easting\",0.0],PARAMETER[\"false_northing\",0.0],PARAMETER[\"central_meridian\",12.0],PARAMETER[\"standard_parallel_1\",-12.0],UNIT[\"Meter\",1.0]]", pixel_type="32_BIT_FLOAT", cellsize=None, number_of_bands=1, mosaic_method="FIRST", mosaic_colormap_mode="LAST")[0]
        seabed_mining_grid_mosaic_tif = arcpy.Raster(seabed_mining_grid_mosaic_tif)

    # Process: Reclassify (3) (Reclassify) (sa)
    seabed_mining_area_reclass2_tif = "M:\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\Seabed_mining\\v01\\proc\\seabed_mining_area_reclass2.tif"
    Reclassify_3_ = seabed_mining_area_reclass2_tif
    seabed_mining_area_reclass2_tif = arcpy.sa.Reclassify(in_raster=seabed_mining_grid_mosaic_tif, reclass_field="VALUE", remap="1 0;2 1", missing_values="DATA")
    seabed_mining_area_reclass2_tif.save(Reclassify_3_)


    # Process: Focal Statistics (Focal Statistics) (ia)
    seabed_mining_area_raster_focal_tif = "M:\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\Seabed_mining\\v01\\proc\\seabed_mining_area_raster_focal.tif"
    Focal_Statistics = seabed_mining_area_raster_focal_tif
    seabed_mining_area_raster_focal_tif = arcpy.ia.FocalStatistics(in_raster=seabed_mining_area_reclass2_tif, neighborhood="Wedge 20 0 360 CELL", statistics_type="SUM", ignore_nodata="DATA", percentile_value=90)
    seabed_mining_area_raster_focal_tif.save(Focal_Statistics)


    # Process: Extract by Mask (3) (Extract by Mask) (sa)
    seabed_mining_area_raster_mask_extract_tif = "M:\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\Seabed_mining\\v01\\proc\\seabed_mining_area_raster_mask_extract.tif"
    Extract_by_Mask_3_ = seabed_mining_area_raster_mask_extract_tif
    with arcpy.EnvManager(cellSize=r"M:\marin\swoc\work\wiosym\data\reg\grid\grid\v01\grid_1km_v01.1.tif", cellSizeProjectionMethod="PRESERVE_RESOLUTION", extent="MAXOF", 
                          mask="grid_1km_v01.1.tif", outputCoordinateSystem="PROJCS["WGS_1984_Cylindrical_Equal_Area",GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Cylindrical_Equal_Area"],PARAMETER["false_easting",0.0],PARAMETER["false_northing",0.0],PARAMETER["central_meridian",12.0],PARAMETER["standard_parallel_1",-12.0],UNIT["Meter",1.0]]"):
        seabed_mining_area_raster_mask_extract_tif = arcpy.sa.ExtractByMask(in_raster=seabed_mining_area_raster_focal_tif, in_mask_data=grid_1km_v01_1_tif_2_)
        seabed_mining_area_raster_mask_extract_tif.save(Extract_by_Mask_3_)


    # Process: Raster Calculator (2) (Raster Calculator) (sa)
    seabed_mining_norm_1km_v01_1_tif = "M:\\marin\\swoc\\work\\wiosym\\data\\reg\\act\\Seabed_mining\\v01\\seabed_mining_norm_1km_v01.1.tif"
    Raster_Calculator_2_ = seabed_mining_norm_1km_v01_1_tif
    seabed_mining_norm_1km_v01_1_tif =  (seabed_mining_area_raster_mask_extract_tif- seabed_mining_area_raster_mask_extract_tif.minimum)/ (seabed_mining_area_raster_mask_extract_tif.maximum- seabed_mining_area_raster_mask_extract_tif.minimum)*100
    seabed_mining_norm_1km_v01_1_tif.save(Raster_Calculator_2_)


if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(scratchWorkspace=r"M:\marin\swoc\work\wiosym\data\reg\act\Seabed_mining\v01\proc\seabed_mining\Default.gdb", workspace=r"M:\marin\swoc\work\wiosym\data\reg\act\Seabed_mining\v01\proc\seabed_mining\Default.gdb"):
        seabed_mining()
